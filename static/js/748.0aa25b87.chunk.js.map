{"version":3,"file":"static/js/748.0aa25b87.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAkB,mCAAG,qGACTD,EAAAA,EAAAA,GACrB,+EAF8B,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAOlBC,EAAe,mCAAG,WAAMC,GAAN,wFACNL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,6DADC,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAa,mCAAG,WAAMD,GAAN,wFACJL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADD,cACrBH,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAgB,mCAAG,WAAMF,GAAN,wFACPL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADE,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAmB,mCAAG,WAAMC,GAAN,wFACVT,EAAAA,EAAAA,GAAM,uBAAD,OACHS,EADG,wFADK,cAC3BP,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,oDCXhC,IAnBmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,GACpB,OACE,yBACE,SAAC,KAAD,CAASU,GAAE,kBAAaV,GAAMW,MAAO,CAAEC,KAAMN,GAA7C,SACGG,KAFIT,EAMZ,OAIR,C,uJCqCD,EAnDe,WACb,OAA4Ba,EAAAA,EAAAA,UAAS,MAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMjB,EAAcgB,EAAaE,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACRP,EAASZ,EACV,GAAE,CAACA,IAuBJ,OAhBAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gGAEjBT,EAFiB,kEAKHZ,EAAAA,EAAAA,IAAoBY,GALjB,OAKhBjB,EALgB,OAMtBgB,EAAUhB,EAAK2B,SANO,gDAQtBP,EAAS,KAAMQ,SACfC,QAAQC,IAAI,KAAMF,SATI,yDAAH,qDAYvBF,GACD,GAAE,CAACT,KAGF,+BACGE,IAAS,oEACV,kBAAMY,SAxBW,SAAAC,GACnBA,EAAEC,iBACFV,EAAgB,CAAEN,MAAOe,EAAEE,OAAOC,SAASC,OAAOC,OACnD,EAqBG,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,cAE1B,mBAAQD,KAAK,SAAb,uBAGD/B,IAAU,SAACiC,EAAA,EAAD,CAAYjC,OAAQA,IAC9BA,GAA4B,IAAlBA,EAAOkC,SAChB,iFAIP,EC5CD,EARmB,WACjB,OACE,2BACE,SAAC,EAAD,KAGL,C","sources":["api/movies.js","components/MoviesList/index.jsx","components/Movies/index.jsx","pages/MoviesPage/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    '/trending/movie/day?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132'\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios(\n    `/movie/${id}?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchCastById = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async searchQuery => {\n  const response = await axios(\n    `/search/movie?query=${searchQuery}&include_adult=false&page=1&language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n","import { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { fetchMoviesBySearch } from 'api/movies';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    setQuery(searchQuery);\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.search.value });\n  };\n\n  useEffect(() => {\n    const getMoviesBySearch = async () => {\n      try {\n        if (!query) {\n          return;\n        }\n        const data = await fetchMoviesBySearch(query);\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      }\n    };\n    getMoviesBySearch();\n  }, [query]);\n\n  return (\n    <section>\n      {error && <p>Sorry, something went wrong, try again.</p>}\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" name=\"search\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies && <MoviesList movies={movies} />}\n      {movies && movies.length === 0 && (\n        <p>We are sorry. There are no matches to your request.</p>\n      )}\n    </section>\n  );\n};\n\nexport default Movies;\n","import Movies from 'components/Movies';\n\nconst MoviesPage = () => {\n  return (\n    <main>\n      <Movies />\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","fetchPopularMovies","response","data","fetchMoviesById","id","fetchCastById","fetchReviewsById","fetchMoviesBySearch","searchQuery","movies","location","useLocation","map","title","to","state","from","useState","setMovies","query","setQuery","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","getMoviesBySearch","results","message","console","log","onSubmit","e","preventDefault","target","elements","search","value","type","name","MoviesList","length"],"sourceRoot":""}