{"version":3,"file":"static/js/968.9f3be29b.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAkB,mCAAG,qGACTD,EAAAA,EAAAA,GACrB,+EAF8B,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAOlBC,EAAe,mCAAG,WAAMC,GAAN,wFACNL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,6DADC,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAa,mCAAG,WAAMD,GAAN,wFACJL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADD,cACrBH,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAgB,mCAAG,WAAMF,GAAN,wFACPL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADE,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAmB,mCAAG,WAAMC,GAAN,wFACVT,EAAAA,EAAAA,GAAM,uBAAD,OACHS,EADG,wFADK,cAC3BP,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,uJC0BhC,EAtDqB,WACnB,OAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,oGAElBJ,EAAS,IAFS,UAGCV,EAAAA,EAAAA,IAAgBW,GAHjB,OAGZZ,EAHY,OAIlBS,EAAaT,GAJK,gDAMlBW,EAAS,KAAMK,SACfC,QAAQC,IAAI,KAAMF,SAPA,yDAAH,qDAUnBD,GACD,GAAE,CAACH,KAGF,2BACGF,IAAS,mEACTF,IACC,4BACE,0BACE,gBACEW,IAAG,0CAAqCX,EAAUY,aAClDC,IAAKb,EAAUc,MACfC,MAAM,WAGV,4BACE,kCAAQf,EAAUc,MAAlB,aAA4Bd,EAAUgB,aAAaC,MACjD,EACA,GAFF,QAIA,kDAAmBC,KAAKC,MAAMnB,EAAUoB,YAAxC,UACA,sCACA,uBAAIpB,EAAUqB,YACd,oCACA,wBACGrB,EAAUsB,OAAOC,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAP,OACpB,wBAAcA,GAAL9B,EADW,OAIxB,yBAMX,ECxBD,EA5ByB,WAAO,IAAD,IACvB+B,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEvD,OACE,6BACE,gCACE,SAAC,KAAD,CAASC,GAAIJ,EAAgBK,QAA7B,sBACA,SAAC,EAAD,QAEF,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASD,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["api/movies.js","components/MovieDetails/index.jsx","pages/MovieDetailsPage/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    '/trending/movie/day?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132'\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios(\n    `/movie/${id}?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchCastById = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async searchQuery => {\n  const response = await axios(\n    `/search/movie?query=${searchQuery}&include_adult=false&page=1&language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMoviesById } from 'api/movies';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMoviesById = async () => {\n      try {\n        setError('');\n        const data = await fetchMoviesById(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      }\n    };\n    getMoviesById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <p>Sorry, something went wrong, try again.</p>}\n      {movieInfo && (\n        <div>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`}\n              alt={movieInfo.title}\n              width=\"200\"\n            />\n          </div>\n          <div>\n            <h1>{`${movieInfo.title} (${movieInfo.release_date.slice(\n              0,\n              4\n            )})`}</h1>\n            <p>User score: {`${Math.round(movieInfo.popularity)} %`}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {movieInfo.genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n            <p></p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport MovieDetails from 'components/MovieDetails';\nimport { Suspense, useRef } from 'react';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const locationBackRef = useRef(location.state?.from ?? '/');\n\n  return (\n    <main>\n      <section>\n        <NavLink to={locationBackRef.current}>Go back</NavLink>\n        <MovieDetails />\n      </section>\n      <section>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </main>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","fetchPopularMovies","response","data","fetchMoviesById","id","fetchCastById","fetchReviewsById","fetchMoviesBySearch","searchQuery","useState","movieInfo","setMovieInfo","error","setError","movieId","useParams","useEffect","getMoviesById","message","console","log","src","poster_path","alt","title","width","release_date","slice","Math","round","popularity","overview","genres","map","name","location","useLocation","locationBackRef","useRef","state","from","to","current","Suspense","fallback"],"sourceRoot":""}