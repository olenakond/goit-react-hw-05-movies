{"version":3,"file":"static/js/916.c912d800.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAkB,mCAAG,qGACTD,EAAAA,EAAAA,GACrB,+EAF8B,cAC1BE,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qDAOlBC,EAAe,mCAAG,WAAMC,GAAN,wFACNL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,6DADC,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAa,mCAAG,WAAMD,GAAN,wFACJL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADD,cACrBH,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAgB,mCAAG,WAAMF,GAAN,wFACPL,EAAAA,EAAAA,GAAM,UAAD,OAChBK,EADgB,qEADE,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBK,EAAmB,mCAAG,WAAMC,GAAN,wFACVT,EAAAA,EAAAA,GAAM,uBAAD,OACHS,EADG,wFADK,cAC3BP,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,yGCYhC,UAxCgB,WACd,OAAsCO,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBJ,EAAS,IAFU,UAGAP,EAAAA,EAAAA,IAAiBQ,GAHjB,OAGbZ,EAHa,OAInBS,EAAeT,EAAKgB,SAJD,gDAMnBL,EAAS,KAAMM,SACfC,QAAQC,IAAI,KAAMF,SAPC,yDAAH,qDAUpBF,GACD,GAAE,CAACH,KAGF,2BACGF,IAAS,mEACTF,IACEA,EAAYY,OAAS,GACpB,yBACGZ,EAAYa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASrB,EAApB,EAAoBA,GAApB,OACf,2BACE,0CAAgBoB,MAChB,uBAAIC,MAFGrB,EADM,OAQnB,uEAIT,C","sources":["api/movies.js","components/Reviews/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios(\n    '/trending/movie/day?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132'\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios(\n    `/movie/${id}?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchCastById = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesBySearch = async searchQuery => {\n  const response = await axios(\n    `/search/movie?query=${searchQuery}&include_adult=false&page=1&language=en-US&api_key=492f31ee414458c3f1e9e8619db62132`\n  );\n  return response.data;\n};\n","import { fetchReviewsById } from 'api/movies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviewsInfo, setReviewsInfo] = useState(null);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviewsById = async () => {\n      try {\n        setError('');\n        const data = await fetchReviewsById(movieId);\n        setReviewsInfo(data.results);\n      } catch (error) {\n        setError(error.message);\n        console.log(error.message);\n      }\n    };\n    getReviewsById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <p>Sorry, something went wrong, try again.</p>}\n      {reviewsInfo &&\n        (reviewsInfo.length > 0 ? (\n          <div>\n            {reviewsInfo.map(({ author, content, id }) => (\n              <li key={id}>\n                <h4>{`Author: ${author}`}</h4>\n                <p>{content}</p>\n              </li>\n            ))}\n          </div>\n        ) : (\n          <p>We don't have any reviews for this film.</p>\n        ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","fetchPopularMovies","response","data","fetchMoviesById","id","fetchCastById","fetchReviewsById","fetchMoviesBySearch","searchQuery","useState","reviewsInfo","setReviewsInfo","error","setError","movieId","useParams","useEffect","getReviewsById","results","message","console","log","length","map","author","content"],"sourceRoot":""}